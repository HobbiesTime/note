{
  "version": 3,
  "sources": ["../../../../node_modules/@shikijs/engine-oniguruma/dist/index.mjs"],
  "sourcesContent": ["class ShikiError extends Error {\r\n  constructor(message) {\r\n    super(message);\r\n    this.name = \"ShikiError\";\r\n  }\r\n}\r\n\r\nfunction getHeapMax() {\r\n  return 2147483648;\r\n}\r\nfunction _emscripten_get_now() {\r\n  return typeof performance !== \"undefined\" ? performance.now() : Date.now();\r\n}\r\nconst alignUp = (x, multiple) => x + (multiple - x % multiple) % multiple;\r\nasync function main(init) {\r\n  let wasmMemory;\r\n  let buffer;\r\n  const binding = {};\r\n  function updateGlobalBufferAndViews(buf) {\r\n    buffer = buf;\r\n    binding.HEAPU8 = new Uint8Array(buf);\r\n    binding.HEAPU32 = new Uint32Array(buf);\r\n  }\r\n  function _emscripten_memcpy_big(dest, src, num) {\r\n    binding.HEAPU8.copyWithin(dest, src, src + num);\r\n  }\r\n  function emscripten_realloc_buffer(size) {\r\n    try {\r\n      wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);\r\n      updateGlobalBufferAndViews(wasmMemory.buffer);\r\n      return 1;\r\n    } catch {\r\n    }\r\n  }\r\n  function _emscripten_resize_heap(requestedSize) {\r\n    const oldSize = binding.HEAPU8.length;\r\n    requestedSize = requestedSize >>> 0;\r\n    const maxHeapSize = getHeapMax();\r\n    if (requestedSize > maxHeapSize)\r\n      return false;\r\n    for (let cutDown = 1; cutDown <= 4; cutDown *= 2) {\r\n      let overGrownHeapSize = oldSize * (1 + 0.2 / cutDown);\r\n      overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);\r\n      const newSize = Math.min(maxHeapSize, alignUp(Math.max(requestedSize, overGrownHeapSize), 65536));\r\n      const replacement = emscripten_realloc_buffer(newSize);\r\n      if (replacement)\r\n        return true;\r\n    }\r\n    return false;\r\n  }\r\n  const UTF8Decoder = typeof TextDecoder != \"undefined\" ? new TextDecoder(\"utf8\") : void 0;\r\n  function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead = 1024) {\r\n    const endIdx = idx + maxBytesToRead;\r\n    let endPtr = idx;\r\n    while (heapOrArray[endPtr] && !(endPtr >= endIdx))\r\n      ++endPtr;\r\n    if (endPtr - idx > 16 && heapOrArray.buffer && UTF8Decoder) {\r\n      return UTF8Decoder.decode(heapOrArray.subarray(idx, endPtr));\r\n    }\r\n    let str = \"\";\r\n    while (idx < endPtr) {\r\n      let u0 = heapOrArray[idx++];\r\n      if (!(u0 & 128)) {\r\n        str += String.fromCharCode(u0);\r\n        continue;\r\n      }\r\n      const u1 = heapOrArray[idx++] & 63;\r\n      if ((u0 & 224) === 192) {\r\n        str += String.fromCharCode((u0 & 31) << 6 | u1);\r\n        continue;\r\n      }\r\n      const u2 = heapOrArray[idx++] & 63;\r\n      if ((u0 & 240) === 224) {\r\n        u0 = (u0 & 15) << 12 | u1 << 6 | u2;\r\n      } else {\r\n        u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63;\r\n      }\r\n      if (u0 < 65536) {\r\n        str += String.fromCharCode(u0);\r\n      } else {\r\n        const ch = u0 - 65536;\r\n        str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n  function UTF8ToString(ptr, maxBytesToRead) {\r\n    return ptr ? UTF8ArrayToString(binding.HEAPU8, ptr, maxBytesToRead) : \"\";\r\n  }\r\n  const asmLibraryArg = {\r\n    emscripten_get_now: _emscripten_get_now,\r\n    emscripten_memcpy_big: _emscripten_memcpy_big,\r\n    emscripten_resize_heap: _emscripten_resize_heap,\r\n    fd_write: () => 0\r\n  };\r\n  async function createWasm() {\r\n    const info = {\r\n      env: asmLibraryArg,\r\n      wasi_snapshot_preview1: asmLibraryArg\r\n    };\r\n    const exports = await init(info);\r\n    wasmMemory = exports.memory;\r\n    updateGlobalBufferAndViews(wasmMemory.buffer);\r\n    Object.assign(binding, exports);\r\n    binding.UTF8ToString = UTF8ToString;\r\n  }\r\n  await createWasm();\r\n  return binding;\r\n}\r\n\r\nvar __defProp = Object.defineProperty;\r\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\r\nvar __publicField = (obj, key, value) => {\r\n  __defNormalProp(obj, typeof key !== \"symbol\" ? key + \"\" : key, value);\r\n  return value;\r\n};\r\nlet onigBinding = null;\r\nfunction throwLastOnigError(onigBinding2) {\r\n  throw new ShikiError(onigBinding2.UTF8ToString(onigBinding2.getLastOnigError()));\r\n}\r\nclass UtfString {\r\n  constructor(str) {\r\n    __publicField(this, \"utf16Length\");\r\n    __publicField(this, \"utf8Length\");\r\n    __publicField(this, \"utf16Value\");\r\n    __publicField(this, \"utf8Value\");\r\n    __publicField(this, \"utf16OffsetToUtf8\");\r\n    __publicField(this, \"utf8OffsetToUtf16\");\r\n    const utf16Length = str.length;\r\n    const utf8Length = UtfString._utf8ByteLength(str);\r\n    const computeIndicesMapping = utf8Length !== utf16Length;\r\n    const utf16OffsetToUtf8 = computeIndicesMapping ? new Uint32Array(utf16Length + 1) : null;\r\n    if (computeIndicesMapping)\r\n      utf16OffsetToUtf8[utf16Length] = utf8Length;\r\n    const utf8OffsetToUtf16 = computeIndicesMapping ? new Uint32Array(utf8Length + 1) : null;\r\n    if (computeIndicesMapping)\r\n      utf8OffsetToUtf16[utf8Length] = utf16Length;\r\n    const utf8Value = new Uint8Array(utf8Length);\r\n    let i8 = 0;\r\n    for (let i16 = 0; i16 < utf16Length; i16++) {\r\n      const charCode = str.charCodeAt(i16);\r\n      let codePoint = charCode;\r\n      let wasSurrogatePair = false;\r\n      if (charCode >= 55296 && charCode <= 56319) {\r\n        if (i16 + 1 < utf16Length) {\r\n          const nextCharCode = str.charCodeAt(i16 + 1);\r\n          if (nextCharCode >= 56320 && nextCharCode <= 57343) {\r\n            codePoint = (charCode - 55296 << 10) + 65536 | nextCharCode - 56320;\r\n            wasSurrogatePair = true;\r\n          }\r\n        }\r\n      }\r\n      if (computeIndicesMapping) {\r\n        utf16OffsetToUtf8[i16] = i8;\r\n        if (wasSurrogatePair)\r\n          utf16OffsetToUtf8[i16 + 1] = i8;\r\n        if (codePoint <= 127) {\r\n          utf8OffsetToUtf16[i8 + 0] = i16;\r\n        } else if (codePoint <= 2047) {\r\n          utf8OffsetToUtf16[i8 + 0] = i16;\r\n          utf8OffsetToUtf16[i8 + 1] = i16;\r\n        } else if (codePoint <= 65535) {\r\n          utf8OffsetToUtf16[i8 + 0] = i16;\r\n          utf8OffsetToUtf16[i8 + 1] = i16;\r\n          utf8OffsetToUtf16[i8 + 2] = i16;\r\n        } else {\r\n          utf8OffsetToUtf16[i8 + 0] = i16;\r\n          utf8OffsetToUtf16[i8 + 1] = i16;\r\n          utf8OffsetToUtf16[i8 + 2] = i16;\r\n          utf8OffsetToUtf16[i8 + 3] = i16;\r\n        }\r\n      }\r\n      if (codePoint <= 127) {\r\n        utf8Value[i8++] = codePoint;\r\n      } else if (codePoint <= 2047) {\r\n        utf8Value[i8++] = 192 | (codePoint & 1984) >>> 6;\r\n        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;\r\n      } else if (codePoint <= 65535) {\r\n        utf8Value[i8++] = 224 | (codePoint & 61440) >>> 12;\r\n        utf8Value[i8++] = 128 | (codePoint & 4032) >>> 6;\r\n        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;\r\n      } else {\r\n        utf8Value[i8++] = 240 | (codePoint & 1835008) >>> 18;\r\n        utf8Value[i8++] = 128 | (codePoint & 258048) >>> 12;\r\n        utf8Value[i8++] = 128 | (codePoint & 4032) >>> 6;\r\n        utf8Value[i8++] = 128 | (codePoint & 63) >>> 0;\r\n      }\r\n      if (wasSurrogatePair)\r\n        i16++;\r\n    }\r\n    this.utf16Length = utf16Length;\r\n    this.utf8Length = utf8Length;\r\n    this.utf16Value = str;\r\n    this.utf8Value = utf8Value;\r\n    this.utf16OffsetToUtf8 = utf16OffsetToUtf8;\r\n    this.utf8OffsetToUtf16 = utf8OffsetToUtf16;\r\n  }\r\n  static _utf8ByteLength(str) {\r\n    let result = 0;\r\n    for (let i = 0, len = str.length; i < len; i++) {\r\n      const charCode = str.charCodeAt(i);\r\n      let codepoint = charCode;\r\n      let wasSurrogatePair = false;\r\n      if (charCode >= 55296 && charCode <= 56319) {\r\n        if (i + 1 < len) {\r\n          const nextCharCode = str.charCodeAt(i + 1);\r\n          if (nextCharCode >= 56320 && nextCharCode <= 57343) {\r\n            codepoint = (charCode - 55296 << 10) + 65536 | nextCharCode - 56320;\r\n            wasSurrogatePair = true;\r\n          }\r\n        }\r\n      }\r\n      if (codepoint <= 127)\r\n        result += 1;\r\n      else if (codepoint <= 2047)\r\n        result += 2;\r\n      else if (codepoint <= 65535)\r\n        result += 3;\r\n      else\r\n        result += 4;\r\n      if (wasSurrogatePair)\r\n        i++;\r\n    }\r\n    return result;\r\n  }\r\n  createString(onigBinding2) {\r\n    const result = onigBinding2.omalloc(this.utf8Length);\r\n    onigBinding2.HEAPU8.set(this.utf8Value, result);\r\n    return result;\r\n  }\r\n}\r\nconst _OnigString = class {\r\n  constructor(str) {\r\n    __publicField(this, \"id\", ++_OnigString.LAST_ID);\r\n    __publicField(this, \"_onigBinding\");\r\n    __publicField(this, \"content\");\r\n    __publicField(this, \"utf16Length\");\r\n    __publicField(this, \"utf8Length\");\r\n    __publicField(this, \"utf16OffsetToUtf8\");\r\n    __publicField(this, \"utf8OffsetToUtf16\");\r\n    __publicField(this, \"ptr\");\r\n    if (!onigBinding)\r\n      throw new ShikiError(\"Must invoke loadWasm first.\");\r\n    this._onigBinding = onigBinding;\r\n    this.content = str;\r\n    const utfString = new UtfString(str);\r\n    this.utf16Length = utfString.utf16Length;\r\n    this.utf8Length = utfString.utf8Length;\r\n    this.utf16OffsetToUtf8 = utfString.utf16OffsetToUtf8;\r\n    this.utf8OffsetToUtf16 = utfString.utf8OffsetToUtf16;\r\n    if (this.utf8Length < 1e4 && !_OnigString._sharedPtrInUse) {\r\n      if (!_OnigString._sharedPtr)\r\n        _OnigString._sharedPtr = onigBinding.omalloc(1e4);\r\n      _OnigString._sharedPtrInUse = true;\r\n      onigBinding.HEAPU8.set(utfString.utf8Value, _OnigString._sharedPtr);\r\n      this.ptr = _OnigString._sharedPtr;\r\n    } else {\r\n      this.ptr = utfString.createString(onigBinding);\r\n    }\r\n  }\r\n  convertUtf8OffsetToUtf16(utf8Offset) {\r\n    if (this.utf8OffsetToUtf16) {\r\n      if (utf8Offset < 0)\r\n        return 0;\r\n      if (utf8Offset > this.utf8Length)\r\n        return this.utf16Length;\r\n      return this.utf8OffsetToUtf16[utf8Offset];\r\n    }\r\n    return utf8Offset;\r\n  }\r\n  convertUtf16OffsetToUtf8(utf16Offset) {\r\n    if (this.utf16OffsetToUtf8) {\r\n      if (utf16Offset < 0)\r\n        return 0;\r\n      if (utf16Offset > this.utf16Length)\r\n        return this.utf8Length;\r\n      return this.utf16OffsetToUtf8[utf16Offset];\r\n    }\r\n    return utf16Offset;\r\n  }\r\n  dispose() {\r\n    if (this.ptr === _OnigString._sharedPtr)\r\n      _OnigString._sharedPtrInUse = false;\r\n    else\r\n      this._onigBinding.ofree(this.ptr);\r\n  }\r\n};\r\nlet OnigString = _OnigString;\r\n__publicField(OnigString, \"LAST_ID\", 0);\r\n__publicField(OnigString, \"_sharedPtr\", 0);\r\n// a pointer to a string of 10000 bytes\r\n__publicField(OnigString, \"_sharedPtrInUse\", false);\r\nclass OnigScanner {\r\n  constructor(patterns) {\r\n    __publicField(this, \"_onigBinding\");\r\n    __publicField(this, \"_ptr\");\r\n    if (!onigBinding)\r\n      throw new ShikiError(\"Must invoke loadWasm first.\");\r\n    const strPtrsArr = [];\r\n    const strLenArr = [];\r\n    for (let i = 0, len = patterns.length; i < len; i++) {\r\n      const utfString = new UtfString(patterns[i]);\r\n      strPtrsArr[i] = utfString.createString(onigBinding);\r\n      strLenArr[i] = utfString.utf8Length;\r\n    }\r\n    const strPtrsPtr = onigBinding.omalloc(4 * patterns.length);\r\n    onigBinding.HEAPU32.set(strPtrsArr, strPtrsPtr / 4);\r\n    const strLenPtr = onigBinding.omalloc(4 * patterns.length);\r\n    onigBinding.HEAPU32.set(strLenArr, strLenPtr / 4);\r\n    const scannerPtr = onigBinding.createOnigScanner(strPtrsPtr, strLenPtr, patterns.length);\r\n    for (let i = 0, len = patterns.length; i < len; i++)\r\n      onigBinding.ofree(strPtrsArr[i]);\r\n    onigBinding.ofree(strLenPtr);\r\n    onigBinding.ofree(strPtrsPtr);\r\n    if (scannerPtr === 0)\r\n      throwLastOnigError(onigBinding);\r\n    this._onigBinding = onigBinding;\r\n    this._ptr = scannerPtr;\r\n  }\r\n  dispose() {\r\n    this._onigBinding.freeOnigScanner(this._ptr);\r\n  }\r\n  findNextMatchSync(string, startPosition, arg) {\r\n    let options = 0 /* None */;\r\n    if (typeof arg === \"number\") {\r\n      options = arg;\r\n    }\r\n    if (typeof string === \"string\") {\r\n      string = new OnigString(string);\r\n      const result = this._findNextMatchSync(string, startPosition, false, options);\r\n      string.dispose();\r\n      return result;\r\n    }\r\n    return this._findNextMatchSync(string, startPosition, false, options);\r\n  }\r\n  _findNextMatchSync(string, startPosition, debugCall, options) {\r\n    const onigBinding2 = this._onigBinding;\r\n    const resultPtr = onigBinding2.findNextOnigScannerMatch(this._ptr, string.id, string.ptr, string.utf8Length, string.convertUtf16OffsetToUtf8(startPosition), options);\r\n    if (resultPtr === 0) {\r\n      return null;\r\n    }\r\n    const HEAPU32 = onigBinding2.HEAPU32;\r\n    let offset = resultPtr / 4;\r\n    const index = HEAPU32[offset++];\r\n    const count = HEAPU32[offset++];\r\n    const captureIndices = [];\r\n    for (let i = 0; i < count; i++) {\r\n      const beg = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\r\n      const end = string.convertUtf8OffsetToUtf16(HEAPU32[offset++]);\r\n      captureIndices[i] = {\r\n        start: beg,\r\n        end,\r\n        length: end - beg\r\n      };\r\n    }\r\n    return {\r\n      index,\r\n      captureIndices\r\n    };\r\n  }\r\n}\r\nfunction isInstantiatorOptionsObject(dataOrOptions) {\r\n  return typeof dataOrOptions.instantiator === \"function\";\r\n}\r\nfunction isInstantiatorModule(dataOrOptions) {\r\n  return typeof dataOrOptions.default === \"function\";\r\n}\r\nfunction isDataOptionsObject(dataOrOptions) {\r\n  return typeof dataOrOptions.data !== \"undefined\";\r\n}\r\nfunction isResponse(dataOrOptions) {\r\n  return typeof Response !== \"undefined\" && dataOrOptions instanceof Response;\r\n}\r\nfunction isArrayBuffer(data) {\r\n  return typeof ArrayBuffer !== \"undefined\" && (data instanceof ArrayBuffer || ArrayBuffer.isView(data)) || typeof Buffer !== \"undefined\" && Buffer.isBuffer?.(data) || typeof SharedArrayBuffer !== \"undefined\" && data instanceof SharedArrayBuffer || typeof Uint32Array !== \"undefined\" && data instanceof Uint32Array;\r\n}\r\nlet initPromise;\r\nfunction loadWasm(options) {\r\n  if (initPromise)\r\n    return initPromise;\r\n  async function _load() {\r\n    onigBinding = await main(async (info) => {\r\n      let instance = options;\r\n      instance = await instance;\r\n      if (typeof instance === \"function\")\r\n        instance = await instance(info);\r\n      if (typeof instance === \"function\")\r\n        instance = await instance(info);\r\n      if (isInstantiatorOptionsObject(instance)) {\r\n        instance = await instance.instantiator(info);\r\n      } else if (isInstantiatorModule(instance)) {\r\n        instance = await instance.default(info);\r\n      } else {\r\n        if (isDataOptionsObject(instance))\r\n          instance = instance.data;\r\n        if (isResponse(instance)) {\r\n          if (typeof WebAssembly.instantiateStreaming === \"function\")\r\n            instance = await _makeResponseStreamingLoader(instance)(info);\r\n          else\r\n            instance = await _makeResponseNonStreamingLoader(instance)(info);\r\n        } else if (isArrayBuffer(instance)) {\r\n          instance = await _makeArrayBufferLoader(instance)(info);\r\n        } else if (instance instanceof WebAssembly.Module) {\r\n          instance = await _makeArrayBufferLoader(instance)(info);\r\n        } else if (\"default\" in instance && instance.default instanceof WebAssembly.Module) {\r\n          instance = await _makeArrayBufferLoader(instance.default)(info);\r\n        }\r\n      }\r\n      if (\"instance\" in instance)\r\n        instance = instance.instance;\r\n      if (\"exports\" in instance)\r\n        instance = instance.exports;\r\n      return instance;\r\n    });\r\n  }\r\n  initPromise = _load();\r\n  return initPromise;\r\n}\r\nfunction _makeArrayBufferLoader(data) {\r\n  return (importObject) => WebAssembly.instantiate(data, importObject);\r\n}\r\nfunction _makeResponseStreamingLoader(data) {\r\n  return (importObject) => WebAssembly.instantiateStreaming(data, importObject);\r\n}\r\nfunction _makeResponseNonStreamingLoader(data) {\r\n  return async (importObject) => {\r\n    const arrayBuffer = await data.arrayBuffer();\r\n    return WebAssembly.instantiate(arrayBuffer, importObject);\r\n  };\r\n}\r\n\r\nlet _defaultWasmLoader;\r\nfunction setDefaultWasmLoader(_loader) {\r\n  _defaultWasmLoader = _loader;\r\n}\r\nfunction getDefaultWasmLoader() {\r\n  return _defaultWasmLoader;\r\n}\r\nasync function createOnigurumaEngine(options) {\r\n  if (options)\r\n    await loadWasm(options);\r\n  return {\r\n    createScanner(patterns) {\r\n      return new OnigScanner(patterns.map((p) => typeof p === \"string\" ? p : p.source));\r\n    },\r\n    createString(s) {\r\n      return new OnigString(s);\r\n    }\r\n  };\r\n}\r\nasync function createWasmOnigEngine(options) {\r\n  return createOnigurumaEngine(options);\r\n}\r\n\r\nexport { createOnigurumaEngine, createWasmOnigEngine, getDefaultWasmLoader, loadWasm, setDefaultWasmLoader };\r\n"],
  "mappings": "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",
  "names": []
}
