import{_ as i,c as t,a as l,o}from"./app-sXCI4Zpz.js";const a={};function n(s,e){return o(),t("div",null,e[0]||(e[0]=[l('<h2 id="web安全" tabindex="-1"><a class="header-anchor" href="#web安全"><span>Web安全</span></a></h2><p>Web 安全旨在保护 Web 应用程序及其用户免受恶意攻击、数据泄露和未经授权的访问。</p><h2 id="web-安全常见问题" tabindex="-1"><a class="header-anchor" href="#web-安全常见问题"><span>Web 安全常见问题</span></a></h2><h3 id="sql-注入-sql-injection" tabindex="-1"><a class="header-anchor" href="#sql-注入-sql-injection"><span>SQL 注入 (SQL Injection)</span></a></h3><ul><li><p><strong><code>描述</code></strong> 攻击者通过在输入字段中插入恶意 SQL 语句，操控数据库执行未经授权的操作。</p></li><li><p><strong><code>解决方案</code></strong></p><ol><li>使用参数化查询或预处理语句（Prepared Statements）。</li><li>避免动态拼接 SQL 语句。</li><li>对用户输入进行严格的验证和转义。</li></ol></li></ul><h3 id="跨站脚本攻击-xss" tabindex="-1"><a class="header-anchor" href="#跨站脚本攻击-xss"><span>跨站脚本攻击 (XSS)</span></a></h3><ul><li><p><strong><code>描述</code></strong> 攻击者向受害者的浏览器注入恶意脚本，从而窃取用户数据或劫持会话。</p></li><li><p><strong><code>解决方案</code></strong></p><ol><li>对用户输入进行 HTML 编码。（用户输入某特特殊字符&lt;&gt;&amp;等，会被当成网页标记来处理，避免这种情况需要对其进行转码再使用）</li><li>使用 CSP（设置http响应头Content-Security-Policy，限制哪些资源允许加载，哪些不允许），</li><li>禁止用户上传或执行非可信的脚本。</li></ol></li></ul><h3 id="跨站请求伪造-csrf" tabindex="-1"><a class="header-anchor" href="#跨站请求伪造-csrf"><span>跨站请求伪造 (CSRF)</span></a></h3><ul><li><strong><code>描述</code></strong> 攻击者利用受害者的身份，向网站发送未经授权的请求。</li></ul><p>用户登录受信任网站后，攻击者通过电子邮件、社交媒体或其他手段，诱使用户访问一个恶意网站或点击一个恶意链接。当用户访问恶意网站时，该网站会通过 JavaScript 或其他手段向受信任的目标网站发送一个伪造的请求。由于该请求是由受害者的浏览器发起的，因此会带上用户的身份验证信息（如 Cookies）</p><ul><li><strong><code>解决方案</code></strong><ol><li>在请求中添加 CSRF Token。原理是在用户请求操作时，生成一个唯一的令牌（Token）并将其附加到请求中。该令牌在服务器端进行验证，确保请求是由受信任的用户发起的，而非伪造的攻击请求</li><li>对敏感操作使用 POST 方法</li><li>验证请求的来源（如通过 Referer 或 Origin 头）</li></ol></li></ul><h3 id="clickjacking-点击劫持" tabindex="-1"><a class="header-anchor" href="#clickjacking-点击劫持"><span>Clickjacking(点击劫持)</span></a></h3><ul><li><p><strong><code>描述</code></strong> 是一种欺骗性的攻击技术，攻击者通过构建一个“隐藏”的恶意页面，诱使用户点击页面上的某些元素，而用户认为自己是在点击页面的其他内容。</p></li><li><p><strong><code>解决方案</code></strong></p><ol><li>使用 X-Frame-Options HTTP 响应头。 X-Frame-Options 是一种 HTTP 响应头，它可以控制页面是否允许通过 <code>&lt;iframe&gt;</code> 标签嵌套在其他页面中</li><li>使用 Content Security Policy (CSP) 的 frame-ancestors 指令。frame-ancestors 指令，可以控制哪些源可以嵌套当前页面</li></ol><div class="language-http line-numbers-mode" data-ext="http" data-title="http"><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;">Content-Security-Policy:</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> frame-ancestors &#39;self&#39;;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="3"><li>使用防点击劫持的 UI 设计</li></ol><ul><li>对重要按钮进行遮罩：在重要的交互按钮（如“支付”按钮）上添加防护层，防止它被透明的恶意 iframe 覆盖。</li><li>使用挑战/确认步骤：在用户执行敏感操作时，要求用户再次确认（例如通过弹窗、验证码等方式）来确保操作是由用户自愿进行的。</li></ul></li></ul><h3 id="数据传输泄露" tabindex="-1"><a class="header-anchor" href="#数据传输泄露"><span>数据传输泄露</span></a></h3><ul><li><p><strong><code>描述</code></strong> 敏感信息（如密码、信用卡号）在存储或传输中未被妥善保护。</p></li><li><p><strong><code>解决方案</code></strong></p><ol><li>使用 HTTPS 加密通信</li><li>对敏感数据进行加密存储</li><li>实施强密码策略</li></ol></li></ul><h3 id="文件上传漏洞" tabindex="-1"><a class="header-anchor" href="#文件上传漏洞"><span>文件上传漏洞</span></a></h3><ul><li><p><strong><code>描述</code></strong> 攻击者通过上传恶意文件执行代码或获取服务器敏感信息。例如</p><ol><li>上传 Web Shell，上传后便可在服务器上执行文件，查看敏感信息</li><li>上传恶意脚本</li><li>上传包含恶意宏的文件</li><li>上传大文件引起服务器崩溃</li></ol></li><li><p><strong><code>解决方案</code></strong></p><ol><li>验证文件扩展名和 MIME 类型</li><li>限制上传目录的执行权限</li><li>检查文件内容并重命名文件</li></ol></li></ul><h3 id="分布式拒绝服务攻击-ddos" tabindex="-1"><a class="header-anchor" href="#分布式拒绝服务攻击-ddos"><span>分布式拒绝服务攻击 (DDoS)</span></a></h3><ul><li><p><strong><code>描述</code></strong> 攻击者通过大量请求使服务器资源耗尽，从而导致服务不可用</p></li><li><p><strong><code>解决方案</code></strong></p><ol><li>使用 WAF（Web 应用防火墙，需要安装、或者购买相应的软件服务）</li><li>部署 DDoS 防护工具（需要安装、或者购买相应的软件服务）</li><li>进行流量监控和速率限制</li></ol></li></ul><h3 id="不安全的反序列化" tabindex="-1"><a class="header-anchor" href="#不安全的反序列化"><span>不安全的反序列化</span></a></h3><ul><li><strong><code>描述</code></strong> 攻击者利用反序列化漏洞执行恶意代码。反序列化攻击的关键问题在于：应用程序未能正确验证反序列化数据的来源，导致恶意数据被反序列化并触发不安全的操作。</li></ul><p>例如，在 Java 中，反序列化恶意对象时，可能会执行 Runtime.getRuntime().exec() 等危险命令，从而触发命令执行攻击。</p><ul><li><strong><code>解决方案</code></strong><ol><li>禁用不可信来源的反序列化</li><li>使用安全的序列化格式，如 JSON</li></ol></li></ul>',23)]))}const c=i(a,[["render",n],["__file","index.html.vue"]]),d=JSON.parse('{"path":"/learn/front/FHkSPfT2yC4cA3tVuw/","title":"Web Security","lang":"en-US","frontmatter":{"title":"Web Security","createTime":"2025/01/19 17:00:48","permalink":"/learn/front/FHkSPfT2yC4cA3tVuw/","author":"Jack","tags":["Web安全","浏览器"],"description":"description","head":[["meta",{"property":"og:url","content":"https://duduainy.top/learn/front/FHkSPfT2yC4cA3tVuw/"}],["meta",{"property":"og:site_name","content":"Seasoned Jack"}],["meta",{"property":"og:title","content":"Web Security"}],["meta",{"property":"og:description","content":"description"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-13T13:07:01.000Z"}],["meta",{"property":"article:author","content":"Jack"}],["meta",{"property":"article:tag","content":"Web安全"}],["meta",{"property":"article:tag","content":"浏览器"}],["meta",{"property":"article:modified_time","content":"2025-02-13T13:07:01.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Web Security\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-13T13:07:01.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jack\\"}]}"]]},"headers":[],"readingTime":{"minutes":4.15,"words":1246},"git":{"updatedTime":1739452021000,"contributors":[{"name":"meishenlieshou","username":"meishenlieshou","email":"meishenlieshou@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/meishenlieshou?v=4","url":"https://github.com/meishenlieshou"}],"changelog":[{"hash":"720238489a47f12efe9e00cc2f2cbe4586665ea7","date":1739452021000,"email":"meishenlieshou@gmail.com","author":"meishenlieshou","message":"commit","commitUrl":"https://github.com/meishenlieshou/note/commit/720238489a47f12efe9e00cc2f2cbe4586665ea7"}]},"filePathRelative":"notes/learn/techs/Web Security.md","bulletin":false}');export{c as comp,d as data};
