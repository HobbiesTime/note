import{_ as a,c as i,a as n,o as e}from"./app-COJ_Qqjj.js";const l={};function p(t,s){return e(),i("div",null,s[0]||(s[0]=[n(`<h2 id="关于monorepo" tabindex="-1"><a class="header-anchor" href="#关于monorepo"><span>关于Monorepo</span></a></h2><p>Monorepo（Monolithic Repository，单体代码仓库）是一种代码管理模式，它将多个项目的代码存储在同一个版本控制仓库中，而不是使用多个独立的仓库（即 Polyrepo）。Monorepo 常用于大型项目或多个相关子项目的开发。</p><p>典型应用场景包括：微前端架构、微服务架构等。</p><h2 id="典型的monorepo项目结构" tabindex="-1"><a class="header-anchor" href="#典型的monorepo项目结构"><span>典型的Monorepo项目结构</span></a></h2><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>my-monorepo/</span></span>
<span class="line"><span>├── package.json  # 顶层依赖和脚本</span></span>
<span class="line"><span>├── packages/</span></span>
<span class="line"><span>│   ├── package-a/  # 子项目 A</span></span>
<span class="line"><span>│   │   ├── package.json</span></span>
<span class="line"><span>│   │   ├── src/</span></span>
<span class="line"><span>│   │   └── tests/</span></span>
<span class="line"><span>│   ├── package-b/  # 子项目 B</span></span>
<span class="line"><span>│   │   ├── package.json</span></span>
<span class="line"><span>│   │   ├── src/</span></span>
<span class="line"><span>│   │   └── tests/</span></span>
<span class="line"><span>│   └── shared/     # 共享模块</span></span>
<span class="line"><span>│       ├── package.json</span></span>
<span class="line"><span>│       └── src/</span></span>
<span class="line"><span>└── lerna.json      # Lerna 配置（如使用）</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>lerna.json文件</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">packages</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#999999;--shiki-dark:#666666;"> [</span></span>
<span class="line"><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">    &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">packages/*</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">  ],</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">version</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">independent</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">npmClient</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;"> &quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">yarn</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">,</span></span>
<span class="line"><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">  &quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">useWorkspace</span><span style="--shiki-light:#99841877;--shiki-dark:#B8A96577;">&quot;</span><span style="--shiki-light:#999999;--shiki-dark:#666666;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="协同工作的图解" tabindex="-1"><a class="header-anchor" href="#协同工作的图解"><span>协同工作的图解</span></a></h2><div class="language- line-numbers-mode" data-ext="" data-title=""><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span>Root (workspace root)</span></span>
<span class="line"><span>├── package.json</span></span>
<span class="line"><span>├── lerna.json</span></span>
<span class="line"><span>├── yarn.lock</span></span>
<span class="line"><span>├── node_modules/       &lt;-- 根目录的依赖</span></span>
<span class="line"><span>└── packages/</span></span>
<span class="line"><span>    ├── package-a/</span></span>
<span class="line"><span>    │   ├── package.json</span></span>
<span class="line"><span>    │   └── node_modules/ &lt;-- 本地无依赖（链接到根目录）</span></span>
<span class="line"><span>    ├── package-b/</span></span>
<span class="line"><span>    │   ├── package.json</span></span>
<span class="line"><span>    │   └── node_modules/ &lt;-- 链接到根目录</span></span>
<span class="line"><span>    └── shared/</span></span>
<span class="line"><span>        ├── package.json</span></span>
<span class="line"><span>        └── node_modules/ &lt;-- 链接到根目录</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="它的优点和缺点是什么" tabindex="-1"><a class="header-anchor" href="#它的优点和缺点是什么"><span>它的优点和缺点是什么？</span></a></h2><ul><li>优点：统一管理、代码复用、简化协作。</li><li>缺点：工具复杂性增加、大型仓库的性能问题。</li></ul><h2 id="monorepo-和-polyrepo-的区别是什么" tabindex="-1"><a class="header-anchor" href="#monorepo-和-polyrepo-的区别是什么"><span>Monorepo 和 Polyrepo 的区别是什么</span></a></h2><ul><li>Monorepo：一个仓库管理多个项目，统一版本控制。</li><li>Polyrepo：每个项目有独立的仓库，项目间协作更松散。</li></ul><h2 id="monorepo-lerna-yarn-的组合" tabindex="-1"><a class="header-anchor" href="#monorepo-lerna-yarn-的组合"><span>Monorepo + Lerna + Yarn 的组合</span></a></h2><ul><li>Lerna 提供工具**<code>管理版本</code>**、 <strong><code>发布</code></strong> 和 <strong><code>增量构建</code></strong></li><li>Yarn Workspaces 专注于 <strong><code>依赖管理</code></strong> 和 <strong><code>工作区链接</code></strong></li></ul><h3 id="配置步骤" tabindex="-1"><a class="header-anchor" href="#配置步骤"><span>配置步骤</span></a></h3><div class="language-shell line-numbers-mode" data-ext="shell" data-title="shell"><button class="copy" title="Copy code" data-copied="Copied"></button><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code><span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#1. 初始化项目</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> my-monorepo</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> my-monorepo</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">yarn</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#2. 启用 Yarn Workspaces。在根目录的package.json中添加配置</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">{</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  &quot;private&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">:</span><span style="--shiki-light:#1E754F;--shiki-dark:#4D9375;"> true</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">,</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">  &quot;workspaces&quot;</span><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">:</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;"> [</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;">packages/*</span><span style="--shiki-light:#B5695977;--shiki-dark:#C98A7D77;">&quot;</span><span style="--shiki-light:#393A34;--shiki-dark:#DBD7CAEE;">]</span></span>
<span class="line"><span style="--shiki-light:#999999;--shiki-dark:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#3. 安装 Lerna</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">yarn</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> lerna</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -W</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#4. 初始化 Lerna，将生成lerna.json</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">npx</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> lerna</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#5. 创建子项目</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">mkdir</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -p</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> packages/package-a</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> packages/package-b</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> packages/package-a</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">yarn</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span>
<span class="line"><span style="--shiki-light:#998418;--shiki-dark:#B8A965;">cd</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> ../package-b</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">yarn</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> init</span><span style="--shiki-light:#A65E2B;--shiki-dark:#C99076;"> -y</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0ADA0;--shiki-dark:#758575DD;">#6. 配置子包之间的依赖</span></span>
<span class="line"><span style="--shiki-light:#59873A;--shiki-dark:#80A665;">yarn</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> workspace</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> package-b</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> add</span><span style="--shiki-light:#B56959;--shiki-dark:#C98A7D;"> package-a</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="常用命令" tabindex="-1"><a class="header-anchor" href="#常用命令"><span>常用命令</span></a></h3><ul><li><strong><code>yarn install</code></strong> 安装依赖</li><li><strong><code>yarn workspace package-a add lodash</code></strong> 为指定的子项目安装依赖</li><li><strong><code>npx lerna run build</code></strong> Lerna 提供了增量构建的能力，只重新构建受影响的包</li><li><strong><code>npx lerna publish</code></strong> 根据变更自动管理版本号并发布</li></ul>`,19)]))}const d=a(l,[["render",p],["__file","index.html.vue"]]),h=JSON.parse('{"path":"/learn/front/BMnToay1gGR/","title":"Monorepo","lang":"en-US","frontmatter":{"title":"Monorepo","createTime":"2025/01/18 07:31:53","permalink":"/learn/front/BMnToay1gGR/","author":"Jack","tags":["Monorepo","微前端"],"description":"description","head":[["meta",{"property":"og:url","content":"https://duduainy.top/learn/front/BMnToay1gGR/"}],["meta",{"property":"og:site_name","content":"Seasoned Jack"}],["meta",{"property":"og:title","content":"Monorepo"}],["meta",{"property":"og:description","content":"description"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-02-10T05:14:34.000Z"}],["meta",{"property":"article:author","content":"Jack"}],["meta",{"property":"article:tag","content":"Monorepo"}],["meta",{"property":"article:tag","content":"微前端"}],["meta",{"property":"article:modified_time","content":"2025-02-10T05:14:34.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Monorepo\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-02-10T05:14:34.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Jack\\"}]}"]]},"headers":[],"readingTime":{"minutes":1.75,"words":525},"git":{"updatedTime":1739164474000,"contributors":[{"name":"meishenlieshou","username":"meishenlieshou","email":"meishenlieshou@gmail.com","commits":1,"avatar":"https://avatars.githubusercontent.com/meishenlieshou?v=4","url":"https://github.com/meishenlieshou"}],"changelog":[{"hash":"bae3266b7f4a0a5928a43ea6a70a53fb1fd24466","date":1739164474000,"email":"meishenlieshou@gmail.com","author":"meishenlieshou","message":"Update config.ts","commitUrl":"https://github.com/meishenlieshou/note/commit/bae3266b7f4a0a5928a43ea6a70a53fb1fd24466"}]},"filePathRelative":"notes/learn/techs/Monorepo.md","bulletin":false}');export{d as comp,h as data};
